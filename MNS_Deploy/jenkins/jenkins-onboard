def short_customer_name = "MNS"
def project_name="${short_customer_name}_Deploy"
def parameter_email_default="sachin.disanayakapedige@spark.co.nz"
def docker_image_name="i-dnibase:2.0"
def agent_name="global_agent"




def uniqueName = currentBuild.startTimeInMillis + "${short_customer_name}"


pipeline {
    agent any
     parameters {  
     string(name: 'Customer_CODE', defaultValue: "" , description: 'Ex: FLTWAN')	
     string(name: 'Email', defaultValue: "${parameter_email_default}" , description: 'The email address to which the report will be delivered.')
     booleanParam(name: 'DRY_RUN', defaultValue: true, description: 'When enabled , changes will not be made to the respective device')	 
     }
    environment {
        PMP_TOKEN = credentials('pmp_token')      
    }
stages {
       stage('Pull DNI Automation Library') {
            steps {
		        sh 'mkdir -p automation'
		        dir('./automation') {
                    git credentialsId: 'onpremado_sshkey',
			        url:  'ssh://sparkado.internal.spark.co.nz:22/sparknz_security/Technical%20Services%20-%20D%20and%20I/_git/OnboardingFramework'
		        }                
            }
        }         
stage('Stash files') {
steps {              
       
        
        stash name: "stash_" + "${short_customer_name}", includes: "**"
        cleanWs()
        }
        }       
stage('Move to Customer Folder') {
       agent { label "${agent_name}" }  
       options { skipDefaultCheckout() }
       stages {
         stage('Unstash'){
         steps {
           unstash name: "stash_" + "${short_customer_name}"                 
            }                        
            }   
		
stage('Build container') {
steps {					
  sh "docker run -di --name c_${uniqueName} -e  PMP_TOKEN=${PMP_TOKEN} -e var_dry_run=${DRY_RUN} -e EMAIL=${EMAIL} -e var_customer_code=${Customer_CODE} -e template=ipam_allocations -e PROJECT=${project_name} --dns 10.241.113.215 --dns 10.241.97.215 --dns-search domm.sdp.net.nz --dns-search gensdp-sc.sdp.net.nz --dns-search uac.sdp.net --dns-search sdp.net.nz dni-container-registry.artifacts.internal.spark.co.nz/${docker_image_name}"
    sh "docker cp ./automation/. c_${uniqueName}:/app/"       
     sh "docker cp MNS_Deploy c_${uniqueName}:/app/projects/"	             
  sh "docker cp ./ c_${uniqueName}:/app/projects/"						
                    
    }
    }                
stage('Ipam Allocations') {
steps {

  sh "docker exec c_${uniqueName} python3 -u onboard.py"
 }
}  

stage('Update Var Files'){
    steps{
          build job:'MNS/Functions/Update_Var_Files-MDR_CLF' , parameters:[
    string(name: 'Customer_CODE',value: "${Customer_CODE}"),
    string(name: 'Email',value: "${EMAIL}"),
     booleanParam(name: 'DRY_RUN', value: "${DRY_RUN}")	
 ]
    }
}
                    
                    
                                                             
            }
            post { 
                always { 
                
                    sh "docker rm c_${uniqueName} -f"
                }
            }
        }
    } 
}